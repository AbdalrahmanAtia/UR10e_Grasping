############################ Commands  ##########################

# Source ros2
source /opt/ros/humble/setup.bash


# Launching the default UR robots from ROS:

ros2 launch ur_robot_driver ur_control.launch.py ur_type:=ur10e robot_ip:=192.168.56.101   # Adjust your ur type and ip address


# Launching the default Moveit from ROS:

ros2 launch ur_moveit_config ur_moveit.launch.py  ur_type:=ur10e  # Adjust your ur type


# Launching the robot on Simulation:
ros2 launch ur_robot_driver ur_control.launch.py ur_type:=ur10e robot_ip:=192.168.56.101 use_fake_hardware:=true fake_execution:=true


# Launching the moveit on Simulation:

ros2 launch ur_moveit_config ur_moveit.launch.py  ur_type:=ur10e   use_fake_hardware:=true fake_execution:=true


# Runing the default Realsense camera:

ros2 launch realsense2_camera rs_launch.py


# Runing the default Realsense camera with both aligned depth with color and point cloud enabled

ros2 launch realsense2_camera rs_launch.py align_depth.enable:=true pointcloud.enable:=true


################################# These are my custom UR10e launchs ################################3

# First source the workspace

cd ~/abdo_ws
source install/setup.bash


# Launching the UR10e:

ros2 launch my_ur_driver my.launch.py  # Modify the code to adjust your ur type and ip address


# Launching the Moveit:

ros2 launch my_ur_driver my_moveit.launch.py  # Modify the code to adjust your ur type


# Launching the robot on Simulation:
ros2 launch my_ur_driver my.launch.py use_fake_hardware:=true fake_execution:=true


# Launching the moveit on Simulation:

ros2 launch my_ur_driver my_moveit.launch.py use_fake_hardware:=true fake_execution:=true


# Runing the Realsense camera

ros2 launch my_ur_driver camera.launch.py


# Runing the Realsense camera with both aligned depth with color and point cloud enabled

ros2 launch my_ur_driver camera.launch.py align_depth.enable:=true pointcloud.enable:=true






# The gripper launch

ros2 launch robotiq_description robotiq_control.launch.py


# Closing the gripper
ros2 action send_goal /robotiq_gripper_controller/gripper_cmd control_msgs/action/GripperCommand "{command: {position: 0.6, max_effort: 50.0}}"

# Opening the gripper
ros2 action send_goal /robotiq_gripper_controller/gripper_cmd control_msgs/action/GripperCommand "{command: {position: 0.1, max_effort: 50.0}}"


# gripper limits: 0.06 or 0.1 (full open) - 0.6 (full close)



#  Network connection isuue solution (adjust the connection name and robot ip  )
sudo nmcli con mod "Wired connection 2" ipv4.addresses 192.168.56.66/24
sudo nmcli con mod "Wired connection 2" ipv4.method manual
sudo nmcli con up "Wired connection 2"


# Install all ros packages or make sure they are installed
rosdep update
rosdep install --from-paths /opt/ros/humble/share --ignore-src -r -y


# Two ways to run python files

/usr/bin/python3.10 calibration.py

ros2 run my_pkg sub_realsense.py


